# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
values:
  google_apikeys_key.feed_api_key[0]:
    display_name: SecOps Feeds API Key
    name: secops-feeds-key
    project: test-project
    restrictions:
      - android_key_restrictions: []
        api_targets:
          - methods: null
            service: chronicle.googleapis.com
        browser_key_restrictions: []
        ios_key_restrictions: []
        server_key_restrictions: []
    timeouts: null
  google_monitoring_alert_policy.chronicle_ingestion_alert[0]:
    alert_strategy: []
    combiner: OR
    conditions:
      - condition_absent: []
        condition_matched_log: []
        condition_monitoring_query_language: []
        condition_prometheus_query_language:
          - alert_rule: null
            disable_metric_validation: null
            duration: 120s
            evaluation_interval: 60s
            labels: null
            query: 100 * sum(rate(chronicle_googleapis_com:ingestion_log_bytes_count{monitored_resource="chronicle.googleapis.com/Collector"}[10m]))
              / min(min_over_time(chronicle_googleapis_com:ingestion_quota_limit{monitored_resource="chronicle.googleapis.com/Collector"}[10m]))
              > 80
            rule_group: null
        condition_sql: []
        condition_threshold: []
        display_name: SecOps ingestion is over 80% of the quota
    display_name: SecOps Ingestion Rate close to ingestion limit.
    documentation:
      - content: The SecOps data ingestion rate has exceeded 80% of the provisioned
          quota. Please investigate the data sources to prevent potential data loss.
        links: []
        mime_type: text/markdown
        subject: null
    enabled: true
    project: test-project
    severity: null
    timeouts: null
    user_labels:
      severity: warning
  google_monitoring_alert_policy.secops_forwarder_silence[0]:
    alert_strategy:
      - auto_close: 604800s
        notification_channel_strategy: []
        notification_prompts: null
        notification_rate_limit: []
    combiner: OR
    conditions:
      - condition_absent:
          - aggregations:
              - alignment_period: 3600s
                cross_series_reducer: REDUCE_MEAN
                group_by_fields:
                  - resource.label.collector_id
                per_series_aligner: ALIGN_MEAN
            duration: 3600s
            filter: metric.type="chronicle.googleapis.com/ingestion/log/record_count"
              resource.type="chronicle.googleapis.com/Collector"
            trigger:
              - count: 1
                percent: null
        condition_matched_log: []
        condition_monitoring_query_language: []
        condition_prometheus_query_language: []
        condition_sql: []
        condition_threshold: []
        display_name: No logs received from a SecOps forwarder for 60 minutes
    display_name: Detect Silent Google SecOps Forwarders
    documentation:
      - content: 'This policy triggers an alert when a Google SecOps forwarder (collector_id:
        ${resource.label.collector_id}) has not sent any logs for 60 minutes.'
        links: []
        mime_type: text/markdown
        subject: null
    enabled: true
    project: test-project
    severity: null
    timeouts: null
    user_labels:
      severity: warning
  google_monitoring_alert_policy.secops_normalized_events_drop[0]:
    alert_strategy:
      - auto_close: 604800s
        notification_channel_strategy: []
        notification_prompts: null
        notification_rate_limit: []
    combiner: OR
    conditions:
      - condition_absent: []
        condition_matched_log: []
        condition_monitoring_query_language: []
        condition_prometheus_query_language:
          - alert_rule: null
            disable_metric_validation: null
            duration: 3600s
            evaluation_interval: 3600s
            labels: null
            query: 100 * abs(sum by (log_type) (chronicle_googleapis_com:ingestion_log_record_count{monitored_resource="chronicle.googleapis.com/Collector"})
              - sum by (log_type) (chronicle_googleapis_com:normalizer_event_record_count{monitored_resource="chronicle.googleapis.com/Collector"}))
              / sum by (log_type) (chronicle_googleapis_com:ingestion_log_record_count{monitored_resource="chronicle.googleapis.com/Collector"})
              > 50
            rule_group: null
        condition_sql: []
        condition_threshold: []
        display_name: Decrease in ration between ingested raw logs and events normalized
          per log type for 60 minutes
    display_name: Detect drop in events normalized per raw loogs ingested in Google
      SecOps
    documentation:
      - content: 'This policy triggers an alert when a Google SecOps forwarder (log_type:
        ${resource.label.log_type}) has not sent any logs for 60 minutes.'
        links: []
        mime_type: text/markdown
        subject: null
    enabled: true
    project: test-project
    severity: null
    timeouts: null
    user_labels:
      severity: warning
  google_monitoring_notification_channel.email_notification["user@example.com"]:
    description: null
    display_name: SecOps Notification email
    enabled: true
    force_delete: false
    labels:
      email_address: user@example.com
    project: test-project
    sensitive_labels: []
    timeouts: null
    type: email
    user_labels: null
  google_service_account_key.workspace_integration_key[0]:
    keepers: null
    key_algorithm: KEY_ALG_RSA_2048
    private_key_type: TYPE_GOOGLE_CREDENTIALS_FILE
    public_key_data: null
    public_key_type: TYPE_X509_PEM_FILE
    service_account_id: workspace-integration@test-project.iam.gserviceaccount.com
  module.project.google_org_policy_policy.default["iam.disableServiceAccountKeyCreation"]:
    dry_run_spec: []
    name: projects/test-project/policies/iam.disableServiceAccountKeyCreation
    parent: projects/test-project
    spec:
      - inherit_from_parent: null
        reset: null
        rules:
          - allow_all: null
            condition: []
            deny_all: null
            enforce: 'FALSE'
            parameters: null
            values: []
    timeouts: null
  module.project.google_project.project[0]:
    auto_create_network: false
    billing_account: 12345-ABCDEF-12345
    deletion_policy: DELETE
    effective_labels:
      goog-terraform-provisioned: 'true'
    folder_id: '2345678901'
    labels: null
    name: test-project
    org_id: null
    project_id: test-project
    tags: null
    terraform_labels:
      goog-terraform-provisioned: 'true'
    timeouts: null
  module.project.google_project_iam_binding.authoritative["roles/chronicle.viewer"]:
    condition: []
    members:
      - group:gcp-secops-admins@example.com
    project: test-project
    role: roles/chronicle.viewer
  module.project.google_project_iam_custom_role.roles["SecOpsDetectionEngineer"]:
    description: Terraform-managed.
    permissions:
      - chronicle.ais.createFeedback
      - chronicle.ais.translateUdmQuery
      - chronicle.ais.translateYlRule
      - chronicle.conversations.get
      - chronicle.conversations.list
      - chronicle.conversations.update
      - chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections
      - chronicle.curatedRuleSetCategories.get
      - chronicle.curatedRuleSetCategories.list
      - chronicle.curatedRuleSetDeployments.batchUpdate
      - chronicle.curatedRuleSetDeployments.get
      - chronicle.curatedRuleSetDeployments.list
      - chronicle.curatedRuleSetDeployments.update
      - chronicle.curatedRuleSets.countCuratedRuleSetDetections
      - chronicle.curatedRuleSets.get
      - chronicle.curatedRuleSets.list
      - chronicle.curatedRules.get
      - chronicle.curatedRules.list
      - chronicle.dashboardCharts.get
      - chronicle.dashboardCharts.list
      - chronicle.dashboardQueries.execute
      - chronicle.dashboardQueries.get
      - chronicle.dashboardQueries.list
      - chronicle.dashboards.copy
      - chronicle.dashboards.create
      - chronicle.dashboards.delete
      - chronicle.dashboards.edit
      - chronicle.dashboards.get
      - chronicle.dashboards.list
      - chronicle.dashboards.schedule
      - chronicle.dataAccessLabels.get
      - chronicle.dataAccessLabels.list
      - chronicle.dataAccessLabels.update
      - chronicle.dataAccessScopes.get
      - chronicle.dataAccessScopes.list
      - chronicle.dataAccessScopes.permit
      - chronicle.dataAccessScopes.update
      - chronicle.dataTableOperationErrors.get
      - chronicle.dataTableRows.asyncBulkCreate
      - chronicle.dataTableRows.asyncBulkReplace
      - chronicle.dataTableRows.asyncBulkUpdate
      - chronicle.dataTableRows.bulkCreate
      - chronicle.dataTableRows.bulkReplace
      - chronicle.dataTableRows.bulkUpdate
      - chronicle.dataTableRows.create
      - chronicle.dataTableRows.delete
      - chronicle.dataTableRows.get
      - chronicle.dataTableRows.list
      - chronicle.dataTableRows.update
      - chronicle.dataTables.bulkCreateDataTableAsync
      - chronicle.dataTables.create
      - chronicle.dataTables.delete
      - chronicle.dataTables.get
      - chronicle.dataTables.list
      - chronicle.dataTables.update
      - chronicle.enrichmentControls.create
      - chronicle.enrichmentControls.delete
      - chronicle.enrichmentControls.get
      - chronicle.enrichmentControls.list
      - chronicle.entities.batchCreate
      - chronicle.entities.batchDelete
      - chronicle.entities.batchValidate
      - chronicle.entities.create
      - chronicle.entities.delete
      - chronicle.entities.find
      - chronicle.entities.findRelatedEntities
      - chronicle.entities.get
      - chronicle.entities.import
      - chronicle.entities.list
      - chronicle.entities.modifyEntityRiskScore
      - chronicle.entities.queryEntityRiskScoreModifications
      - chronicle.entities.searchEntities
      - chronicle.entities.summarize
      - chronicle.entities.summarizeFromQuery
      - chronicle.events.batchGet
      - chronicle.events.findUdmFieldValues
      - chronicle.events.get
      - chronicle.events.import
      - chronicle.events.queryProductSourceStats
      - chronicle.events.searchRawLogs
      - chronicle.events.udmSearch
      - chronicle.events.validateQuery
      - chronicle.featuredContentRules.list
      - chronicle.findingsGraphs.exploreNode
      - chronicle.findingsGraphs.initializeGraph
      - chronicle.findingsRefinementDeployments.get
      - chronicle.findingsRefinementDeployments.list
      - chronicle.findingsRefinementDeployments.update
      - chronicle.findingsRefinements.computeActivity
      - chronicle.findingsRefinements.computeAllActivities
      - chronicle.findingsRefinements.create
      - chronicle.findingsRefinements.get
      - chronicle.findingsRefinements.list
      - chronicle.findingsRefinements.test
      - chronicle.findingsRefinements.update
      - chronicle.globalDataAccessScopes.permit
      - chronicle.instances.generateCollectionAgentAuth
      - chronicle.instances.generateSoarAuthJwt
      - chronicle.instances.generateWorkspaceConnectionToken
      - chronicle.instances.get
      - chronicle.instances.graduatePocInstance
      - chronicle.instances.logTypeClassifier
      - chronicle.instances.report
      - chronicle.instances.update
      - chronicle.instances.verifyNonce
      - chronicle.iocMatches.get
      - chronicle.iocMatches.list
      - chronicle.iocState.get
      - chronicle.iocState.update
      - chronicle.iocs.batchGet
      - chronicle.iocs.findFirstAndLastSeen
      - chronicle.iocs.get
      - chronicle.iocs.searchCuratedDetectionsForIoc
      - chronicle.legacies.legacyBatchGetCollections
      - chronicle.legacies.legacyFetchAlertsView
      - chronicle.legacies.legacyFetchUdmSearchCsv
      - chronicle.legacies.legacyFetchUdmSearchView
      - chronicle.legacies.legacyFindAssetEvents
      - chronicle.legacies.legacyFindRawLogs
      - chronicle.legacies.legacyFindUdmEvents
      - chronicle.legacies.legacyGetAlert
      - chronicle.legacies.legacyGetCuratedRulesTrends
      - chronicle.legacies.legacyGetDetection
      - chronicle.legacies.legacyGetEventForDetection
      - chronicle.legacies.legacyGetRuleCounts
      - chronicle.legacies.legacyGetRulesTrends
      - chronicle.legacies.legacyRunTestRule
      - chronicle.legacies.legacySearchArtifactEvents
      - chronicle.legacies.legacySearchArtifactIoCDetails
      - chronicle.legacies.legacySearchAssetEvents
      - chronicle.legacies.legacySearchCuratedDetections
      - chronicle.legacies.legacySearchCustomerStats
      - chronicle.legacies.legacySearchDetections
      - chronicle.legacies.legacySearchDomainsRecentlyRegistered
      - chronicle.legacies.legacySearchDomainsTimingStats
      - chronicle.legacies.legacySearchEnterpriseWideAlerts
      - chronicle.legacies.legacySearchEnterpriseWideIoCs
      - chronicle.legacies.legacySearchFindings
      - chronicle.legacies.legacySearchIngestionStats
      - chronicle.legacies.legacySearchIoCInsights
      - chronicle.legacies.legacySearchRawLogs
      - chronicle.legacies.legacySearchRuleDetectionCountBuckets
      - chronicle.legacies.legacySearchRuleDetectionEvents
      - chronicle.legacies.legacySearchRuleResults
      - chronicle.legacies.legacySearchRulesAlerts
      - chronicle.legacies.legacySearchUserEvents
      - chronicle.legacies.legacyStreamDetectionAlerts
      - chronicle.legacies.legacyTestRuleStreaming
      - chronicle.messages.get
      - chronicle.messages.list
      - chronicle.messages.update
      - chronicle.nativeDashboards.create
      - chronicle.nativeDashboards.delete
      - chronicle.nativeDashboards.duplicate
      - chronicle.nativeDashboards.get
      - chronicle.nativeDashboards.list
      - chronicle.nativeDashboards.update
      - chronicle.operations.cancel
      - chronicle.operations.delete
      - chronicle.operations.get
      - chronicle.operations.list
      - chronicle.operations.streamSearch
      - chronicle.operations.wait
      - chronicle.preferenceSets.get
      - chronicle.preferenceSets.update
      - chronicle.referenceLists.create
      - chronicle.referenceLists.get
      - chronicle.referenceLists.list
      - chronicle.referenceLists.update
      - chronicle.referenceLists.verifyReferenceList
      - chronicle.retrohunts.create
      - chronicle.retrohunts.get
      - chronicle.retrohunts.list
      - chronicle.riskConfigs.get
      - chronicle.riskConfigs.update
      - chronicle.ruleDeployments.get
      - chronicle.ruleDeployments.list
      - chronicle.ruleDeployments.update
      - chronicle.ruleExecutionErrors.list
      - chronicle.rules.create
      - chronicle.rules.delete
      - chronicle.rules.get
      - chronicle.rules.list
      - chronicle.rules.listRevisions
      - chronicle.rules.update
      - chronicle.rules.verifyRuleText
      - chronicle.searchQueries.get
      - chronicle.searchQueries.list
      - chronicle.searchQueries.update
      - chronicle.threatCollections.fetchIocMatchMetadata
      - chronicle.threatCollections.fetchRuleMetadata
      - chronicle.threatCollections.get
      - chronicle.threatCollections.list
      - chronicle.watchlists.create
      - chronicle.watchlists.delete
      - chronicle.watchlists.get
      - chronicle.watchlists.list
      - chronicle.watchlists.update
      - resourcemanager.projects.get
    project: test-project
    role_id: SecOpsDetectionEngineer
    stage: GA
    title: Custom role SecOpsDetectionEngineer
  module.project.google_project_iam_custom_role.roles["SecOpsIngestionAPI"]:
    description: Terraform-managed.
    permissions:
      - chronicle.entities.import
      - chronicle.events.import
      - chronicle.logs.import
    project: test-project
    role_id: SecOpsIngestionAPI
    stage: GA
    title: Custom role SecOpsIngestionAPI
  module.project.google_project_iam_custom_role.roles["SecOpsOnboardingEngineer"]:
    description: Terraform-managed.
    permissions:
      - chronicle.ais.createFeedback
      - chronicle.ais.translateUdmQuery
      - chronicle.ais.translateYlRule
      - chronicle.collectors.create
      - chronicle.collectors.delete
      - chronicle.collectors.get
      - chronicle.collectors.list
      - chronicle.collectors.update
      - chronicle.conversations.get
      - chronicle.conversations.list
      - chronicle.conversations.update
      - chronicle.dashboardCharts.get
      - chronicle.dashboardCharts.list
      - chronicle.dashboardQueries.execute
      - chronicle.dashboardQueries.get
      - chronicle.dashboardQueries.list
      - chronicle.dashboards.copy
      - chronicle.dashboards.create
      - chronicle.dashboards.delete
      - chronicle.dashboards.edit
      - chronicle.dashboards.get
      - chronicle.dashboards.list
      - chronicle.dashboards.schedule
      - chronicle.dataAccessLabels.get
      - chronicle.dataAccessLabels.list
      - chronicle.dataAccessLabels.update
      - chronicle.dataAccessScopes.get
      - chronicle.dataAccessScopes.list
      - chronicle.dataAccessScopes.permit
      - chronicle.dataAccessScopes.update
      - chronicle.enrichmentControls.get
      - chronicle.enrichmentControls.list
      - chronicle.entities.batchCreate
      - chronicle.entities.batchDelete
      - chronicle.entities.batchValidate
      - chronicle.entities.find
      - chronicle.entities.findRelatedEntities
      - chronicle.entities.get
      - chronicle.entities.import
      - chronicle.entities.list
      - chronicle.entities.modifyEntityRiskScore
      - chronicle.entities.queryEntityRiskScoreModifications
      - chronicle.entities.searchEntities
      - chronicle.entities.summarize
      - chronicle.entities.summarizeFromQuery
      - chronicle.events.batchGet
      - chronicle.events.findUdmFieldValues
      - chronicle.events.get
      - chronicle.events.import
      - chronicle.events.queryProductSourceStats
      - chronicle.events.searchRawLogs
      - chronicle.events.udmSearch
      - chronicle.events.validateQuery
      - chronicle.extensionValidationReports.get
      - chronicle.extensionValidationReports.list
      - chronicle.feedPacks.get
      - chronicle.feedPacks.list
      - chronicle.feedServiceAccounts.fetch
      - chronicle.feedSourceTypeSchemas.list
      - chronicle.feeds.create
      - chronicle.feeds.delete
      - chronicle.feeds.disable
      - chronicle.feeds.enable
      - chronicle.feeds.generateSecret
      - chronicle.feeds.get
      - chronicle.feeds.list
      - chronicle.feeds.update
      - chronicle.findingsGraphs.exploreNode
      - chronicle.findingsGraphs.initializeGraph
      - chronicle.forwarders.create
      - chronicle.forwarders.delete
      - chronicle.forwarders.generate
      - chronicle.forwarders.get
      - chronicle.forwarders.list
      - chronicle.forwarders.update
      - chronicle.globalDataAccessScopes.permit
      - chronicle.ingestionLogLabels.get
      - chronicle.ingestionLogLabels.list
      - chronicle.ingestionLogNamespaces.get
      - chronicle.ingestionLogNamespaces.list
      - chronicle.instances.generateCollectionAgentAuth
      - chronicle.instances.generateSoarAuthJwt
      - chronicle.instances.generateWorkspaceConnectionToken
      - chronicle.instances.get
      - chronicle.instances.graduatePocInstance
      - chronicle.instances.logTypeClassifier
      - chronicle.instances.report
      - chronicle.instances.update
      - chronicle.instances.verifyNonce
      - chronicle.legacies.legacyFetchUdmSearchCsv
      - chronicle.legacies.legacyFetchUdmSearchView
      - chronicle.legacies.legacyFindAssetEvents
      - chronicle.legacies.legacyFindRawLogs
      - chronicle.legacies.legacyFindUdmEvents
      - chronicle.legacies.legacySearchArtifactEvents
      - chronicle.legacies.legacySearchArtifactIoCDetails
      - chronicle.legacies.legacySearchAssetEvents
      - chronicle.legacies.legacySearchCustomerStats
      - chronicle.legacies.legacySearchEnterpriseWideIoCs
      - chronicle.legacies.legacySearchIngestionStats
      - chronicle.legacies.legacySearchIoCInsights
      - chronicle.legacies.legacySearchRawLogs
      - chronicle.legacies.legacySearchUserEvents
      - chronicle.logTypeSchemas.list
      - chronicle.logTypeSettings.get
      - chronicle.logTypeSettings.list
      - chronicle.logTypeSettings.update
      - chronicle.logTypes.create
      - chronicle.logTypes.get
      - chronicle.logTypes.list
      - chronicle.logTypes.update
      - chronicle.logs.get
      - chronicle.logs.list
      - chronicle.messages.get
      - chronicle.messages.list
      - chronicle.messages.update
      - chronicle.nativeDashboards.create
      - chronicle.nativeDashboards.delete
      - chronicle.nativeDashboards.duplicate
      - chronicle.nativeDashboards.get
      - chronicle.nativeDashboards.list
      - chronicle.nativeDashboards.update
      - chronicle.operations.cancel
      - chronicle.operations.delete
      - chronicle.operations.get
      - chronicle.operations.list
      - chronicle.operations.streamSearch
      - chronicle.operations.wait
      - chronicle.parserExtensions.activate
      - chronicle.parserExtensions.create
      - chronicle.parserExtensions.delete
      - chronicle.parserExtensions.generateKeyValueMappings
      - chronicle.parserExtensions.get
      - chronicle.parserExtensions.legacySubmitParserExtension
      - chronicle.parserExtensions.list
      - chronicle.parserExtensions.removeSyslog
      - chronicle.parsers.activate
      - chronicle.parsers.activateReleaseCandidate
      - chronicle.parsers.copyPrebuiltParser
      - chronicle.parsers.create
      - chronicle.parsers.deactivate
      - chronicle.parsers.delete
      - chronicle.parsers.generateEventTypesSuggestions
      - chronicle.parsers.get
      - chronicle.parsers.list
      - chronicle.parsers.runParser
      - chronicle.parsingErrors.list
      - chronicle.preferenceSets.get
      - chronicle.preferenceSets.update
      - chronicle.riskConfigs.get
      - chronicle.riskConfigs.update
      - chronicle.searchQueries.get
      - chronicle.searchQueries.list
      - chronicle.searchQueries.update
      - chronicle.validationErrors.list
      - chronicle.validationReports.get
      - chronicle.watchlists.get
      - chronicle.watchlists.list
      - chronicle.watchlists.update
      - resourcemanager.projects.get
    project: test-project
    role_id: SecOpsOnboardingEngineer
    stage: GA
    title: Custom role SecOpsOnboardingEngineer
  module.project.google_project_iam_custom_role.roles["SecOpsSOCAnalyst"]:
    description: Terraform-managed.
    permissions:
      - chronicle.ais.createFeedback
      - chronicle.ais.translateUdmQuery
      - chronicle.ais.translateYlRule
      - chronicle.conversations.get
      - chronicle.conversations.list
      - chronicle.conversations.update
      - chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections
      - chronicle.curatedRuleSetCategories.get
      - chronicle.curatedRuleSetCategories.list
      - chronicle.curatedRuleSetDeployments.batchUpdate
      - chronicle.curatedRuleSetDeployments.get
      - chronicle.curatedRuleSetDeployments.list
      - chronicle.curatedRuleSetDeployments.update
      - chronicle.curatedRuleSets.countCuratedRuleSetDetections
      - chronicle.curatedRuleSets.get
      - chronicle.curatedRuleSets.list
      - chronicle.curatedRules.get
      - chronicle.curatedRules.list
      - chronicle.dashboardCharts.get
      - chronicle.dashboardCharts.list
      - chronicle.dashboardQueries.execute
      - chronicle.dashboardQueries.get
      - chronicle.dashboardQueries.list
      - chronicle.dashboards.copy
      - chronicle.dashboards.edit
      - chronicle.dashboards.get
      - chronicle.dashboards.list
      - chronicle.dashboards.schedule
      - chronicle.dataAccessLabels.get
      - chronicle.dataAccessLabels.list
      - chronicle.dataAccessLabels.update
      - chronicle.dataAccessScopes.get
      - chronicle.dataAccessScopes.list
      - chronicle.dataAccessScopes.permit
      - chronicle.dataAccessScopes.update
      - chronicle.dataTableOperationErrors.get
      - chronicle.dataTableRows.asyncBulkCreate
      - chronicle.dataTableRows.asyncBulkReplace
      - chronicle.dataTableRows.asyncBulkUpdate
      - chronicle.dataTableRows.bulkCreate
      - chronicle.dataTableRows.bulkReplace
      - chronicle.dataTableRows.bulkUpdate
      - chronicle.dataTableRows.get
      - chronicle.dataTableRows.list
      - chronicle.dataTableRows.update
      - chronicle.dataTables.bulkCreateDataTableAsync
      - chronicle.dataTables.get
      - chronicle.dataTables.list
      - chronicle.dataTables.update
      - chronicle.enrichmentControls.get
      - chronicle.enrichmentControls.list
      - chronicle.entities.batchCreate
      - chronicle.entities.batchDelete
      - chronicle.entities.batchValidate
      - chronicle.entities.find
      - chronicle.entities.findRelatedEntities
      - chronicle.entities.get
      - chronicle.entities.import
      - chronicle.entities.list
      - chronicle.entities.modifyEntityRiskScore
      - chronicle.entities.queryEntityRiskScoreModifications
      - chronicle.entities.searchEntities
      - chronicle.entities.summarize
      - chronicle.entities.summarizeFromQuery
      - chronicle.events.batchGet
      - chronicle.events.findUdmFieldValues
      - chronicle.events.get
      - chronicle.events.import
      - chronicle.events.queryProductSourceStats
      - chronicle.events.searchRawLogs
      - chronicle.events.udmSearch
      - chronicle.events.validateQuery
      - chronicle.featuredContentRules.list
      - chronicle.findingsGraphs.exploreNode
      - chronicle.findingsGraphs.initializeGraph
      - chronicle.findingsRefinementDeployments.get
      - chronicle.findingsRefinementDeployments.list
      - chronicle.findingsRefinementDeployments.update
      - chronicle.findingsRefinements.computeActivity
      - chronicle.findingsRefinements.computeAllActivities
      - chronicle.findingsRefinements.get
      - chronicle.findingsRefinements.list
      - chronicle.findingsRefinements.test
      - chronicle.findingsRefinements.update
      - chronicle.globalDataAccessScopes.permit
      - chronicle.instances.generateCollectionAgentAuth
      - chronicle.instances.generateSoarAuthJwt
      - chronicle.instances.generateWorkspaceConnectionToken
      - chronicle.instances.get
      - chronicle.instances.graduatePocInstance
      - chronicle.instances.logTypeClassifier
      - chronicle.instances.report
      - chronicle.instances.update
      - chronicle.instances.verifyNonce
      - chronicle.iocMatches.get
      - chronicle.iocMatches.list
      - chronicle.iocState.get
      - chronicle.iocState.update
      - chronicle.iocs.batchGet
      - chronicle.iocs.findFirstAndLastSeen
      - chronicle.iocs.get
      - chronicle.iocs.searchCuratedDetectionsForIoc
      - chronicle.legacies.legacyBatchGetCollections
      - chronicle.legacies.legacyFetchAlertsView
      - chronicle.legacies.legacyFetchUdmSearchCsv
      - chronicle.legacies.legacyFetchUdmSearchView
      - chronicle.legacies.legacyFindAssetEvents
      - chronicle.legacies.legacyFindRawLogs
      - chronicle.legacies.legacyFindUdmEvents
      - chronicle.legacies.legacyGetAlert
      - chronicle.legacies.legacyGetCuratedRulesTrends
      - chronicle.legacies.legacyGetDetection
      - chronicle.legacies.legacyGetEventForDetection
      - chronicle.legacies.legacyGetRuleCounts
      - chronicle.legacies.legacyGetRulesTrends
      - chronicle.legacies.legacyRunTestRule
      - chronicle.legacies.legacySearchArtifactEvents
      - chronicle.legacies.legacySearchArtifactIoCDetails
      - chronicle.legacies.legacySearchAssetEvents
      - chronicle.legacies.legacySearchCuratedDetections
      - chronicle.legacies.legacySearchCustomerStats
      - chronicle.legacies.legacySearchDetections
      - chronicle.legacies.legacySearchDomainsRecentlyRegistered
      - chronicle.legacies.legacySearchDomainsTimingStats
      - chronicle.legacies.legacySearchEnterpriseWideAlerts
      - chronicle.legacies.legacySearchEnterpriseWideIoCs
      - chronicle.legacies.legacySearchFindings
      - chronicle.legacies.legacySearchIngestionStats
      - chronicle.legacies.legacySearchIoCInsights
      - chronicle.legacies.legacySearchRawLogs
      - chronicle.legacies.legacySearchRuleDetectionCountBuckets
      - chronicle.legacies.legacySearchRuleDetectionEvents
      - chronicle.legacies.legacySearchRuleResults
      - chronicle.legacies.legacySearchRulesAlerts
      - chronicle.legacies.legacySearchUserEvents
      - chronicle.legacies.legacyStreamDetectionAlerts
      - chronicle.legacies.legacyTestRuleStreaming
      - chronicle.messages.get
      - chronicle.messages.list
      - chronicle.messages.update
      - chronicle.nativeDashboards.duplicate
      - chronicle.nativeDashboards.get
      - chronicle.nativeDashboards.list
      - chronicle.nativeDashboards.update
      - chronicle.operations.cancel
      - chronicle.operations.get
      - chronicle.operations.list
      - chronicle.operations.streamSearch
      - chronicle.operations.wait
      - chronicle.preferenceSets.get
      - chronicle.preferenceSets.update
      - chronicle.referenceLists.get
      - chronicle.referenceLists.list
      - chronicle.referenceLists.update
      - chronicle.referenceLists.verifyReferenceList
      - chronicle.retrohunts.get
      - chronicle.retrohunts.list
      - chronicle.riskConfigs.get
      - chronicle.riskConfigs.update
      - chronicle.ruleDeployments.get
      - chronicle.ruleDeployments.list
      - chronicle.ruleDeployments.update
      - chronicle.ruleExecutionErrors.list
      - chronicle.rules.get
      - chronicle.rules.list
      - chronicle.rules.listRevisions
      - chronicle.rules.update
      - chronicle.rules.verifyRuleText
      - chronicle.searchQueries.get
      - chronicle.searchQueries.list
      - chronicle.searchQueries.update
      - chronicle.threatCollections.fetchIocMatchMetadata
      - chronicle.threatCollections.fetchRuleMetadata
      - chronicle.threatCollections.get
      - chronicle.threatCollections.list
      - chronicle.watchlists.get
      - chronicle.watchlists.list
      - chronicle.watchlists.update
      - resourcemanager.projects.get
    project: test-project
    role_id: SecOpsSOCAnalyst
    stage: GA
    title: Custom role SecOpsSOCAnalyst
  module.project.google_project_iam_custom_role.roles["SecOpsScopedDetectionEngineer"]:
    description: Terraform-managed.
    permissions:
      - chronicle.ais.createFeedback
      - chronicle.ais.translateUdmQuery
      - chronicle.ais.translateYlRule
      - chronicle.conversations.get
      - chronicle.conversations.list
      - chronicle.conversations.update
      - chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections
      - chronicle.curatedRuleSetCategories.get
      - chronicle.curatedRuleSetCategories.list
      - chronicle.curatedRuleSetDeployments.batchUpdate
      - chronicle.curatedRuleSetDeployments.get
      - chronicle.curatedRuleSetDeployments.list
      - chronicle.curatedRuleSetDeployments.update
      - chronicle.curatedRuleSets.countCuratedRuleSetDetections
      - chronicle.curatedRuleSets.get
      - chronicle.curatedRuleSets.list
      - chronicle.curatedRules.get
      - chronicle.curatedRules.list
      - chronicle.dashboardCharts.get
      - chronicle.dashboardCharts.list
      - chronicle.dashboardQueries.execute
      - chronicle.dashboardQueries.get
      - chronicle.dashboardQueries.list
      - chronicle.dashboards.copy
      - chronicle.dashboards.create
      - chronicle.dashboards.delete
      - chronicle.dashboards.edit
      - chronicle.dashboards.get
      - chronicle.dashboards.list
      - chronicle.dashboards.schedule
      - chronicle.dataAccessLabels.get
      - chronicle.dataAccessLabels.list
      - chronicle.dataAccessLabels.update
      - chronicle.dataAccessScopes.get
      - chronicle.dataAccessScopes.list
      - chronicle.dataAccessScopes.permit
      - chronicle.dataAccessScopes.update
      - chronicle.dataTableOperationErrors.get
      - chronicle.dataTableRows.asyncBulkCreate
      - chronicle.dataTableRows.asyncBulkReplace
      - chronicle.dataTableRows.asyncBulkUpdate
      - chronicle.dataTableRows.bulkCreate
      - chronicle.dataTableRows.bulkReplace
      - chronicle.dataTableRows.bulkUpdate
      - chronicle.dataTableRows.create
      - chronicle.dataTableRows.delete
      - chronicle.dataTableRows.get
      - chronicle.dataTableRows.list
      - chronicle.dataTableRows.update
      - chronicle.dataTables.bulkCreateDataTableAsync
      - chronicle.dataTables.create
      - chronicle.dataTables.delete
      - chronicle.dataTables.get
      - chronicle.dataTables.list
      - chronicle.dataTables.update
      - chronicle.enrichmentControls.create
      - chronicle.enrichmentControls.delete
      - chronicle.enrichmentControls.get
      - chronicle.enrichmentControls.list
      - chronicle.entities.batchCreate
      - chronicle.entities.batchDelete
      - chronicle.entities.batchValidate
      - chronicle.entities.create
      - chronicle.entities.delete
      - chronicle.entities.find
      - chronicle.entities.findRelatedEntities
      - chronicle.entities.get
      - chronicle.entities.import
      - chronicle.entities.list
      - chronicle.entities.modifyEntityRiskScore
      - chronicle.entities.queryEntityRiskScoreModifications
      - chronicle.entities.searchEntities
      - chronicle.entities.summarize
      - chronicle.entities.summarizeFromQuery
      - chronicle.events.batchGet
      - chronicle.events.findUdmFieldValues
      - chronicle.events.get
      - chronicle.events.import
      - chronicle.events.queryProductSourceStats
      - chronicle.events.searchRawLogs
      - chronicle.events.udmSearch
      - chronicle.events.validateQuery
      - chronicle.featuredContentRules.list
      - chronicle.findingsGraphs.exploreNode
      - chronicle.findingsGraphs.initializeGraph
      - chronicle.findingsRefinementDeployments.get
      - chronicle.findingsRefinementDeployments.list
      - chronicle.findingsRefinementDeployments.update
      - chronicle.findingsRefinements.computeActivity
      - chronicle.findingsRefinements.computeAllActivities
      - chronicle.findingsRefinements.create
      - chronicle.findingsRefinements.get
      - chronicle.findingsRefinements.list
      - chronicle.findingsRefinements.test
      - chronicle.findingsRefinements.update
      - chronicle.instances.generateCollectionAgentAuth
      - chronicle.instances.generateSoarAuthJwt
      - chronicle.instances.generateWorkspaceConnectionToken
      - chronicle.instances.get
      - chronicle.instances.graduatePocInstance
      - chronicle.instances.logTypeClassifier
      - chronicle.instances.report
      - chronicle.instances.update
      - chronicle.instances.verifyNonce
      - chronicle.iocMatches.get
      - chronicle.iocMatches.list
      - chronicle.iocState.get
      - chronicle.iocState.update
      - chronicle.iocs.batchGet
      - chronicle.iocs.findFirstAndLastSeen
      - chronicle.iocs.get
      - chronicle.iocs.searchCuratedDetectionsForIoc
      - chronicle.legacies.legacyBatchGetCollections
      - chronicle.legacies.legacyFetchAlertsView
      - chronicle.legacies.legacyFetchUdmSearchCsv
      - chronicle.legacies.legacyFetchUdmSearchView
      - chronicle.legacies.legacyFindAssetEvents
      - chronicle.legacies.legacyFindRawLogs
      - chronicle.legacies.legacyFindUdmEvents
      - chronicle.legacies.legacyGetAlert
      - chronicle.legacies.legacyGetCuratedRulesTrends
      - chronicle.legacies.legacyGetDetection
      - chronicle.legacies.legacyGetEventForDetection
      - chronicle.legacies.legacyGetRuleCounts
      - chronicle.legacies.legacyGetRulesTrends
      - chronicle.legacies.legacyRunTestRule
      - chronicle.legacies.legacySearchArtifactEvents
      - chronicle.legacies.legacySearchArtifactIoCDetails
      - chronicle.legacies.legacySearchAssetEvents
      - chronicle.legacies.legacySearchCuratedDetections
      - chronicle.legacies.legacySearchCustomerStats
      - chronicle.legacies.legacySearchDetections
      - chronicle.legacies.legacySearchDomainsRecentlyRegistered
      - chronicle.legacies.legacySearchDomainsTimingStats
      - chronicle.legacies.legacySearchEnterpriseWideAlerts
      - chronicle.legacies.legacySearchEnterpriseWideIoCs
      - chronicle.legacies.legacySearchFindings
      - chronicle.legacies.legacySearchIngestionStats
      - chronicle.legacies.legacySearchIoCInsights
      - chronicle.legacies.legacySearchRawLogs
      - chronicle.legacies.legacySearchRuleDetectionCountBuckets
      - chronicle.legacies.legacySearchRuleDetectionEvents
      - chronicle.legacies.legacySearchRuleResults
      - chronicle.legacies.legacySearchRulesAlerts
      - chronicle.legacies.legacySearchUserEvents
      - chronicle.legacies.legacyStreamDetectionAlerts
      - chronicle.legacies.legacyTestRuleStreaming
      - chronicle.messages.get
      - chronicle.messages.list
      - chronicle.messages.update
      - chronicle.nativeDashboards.create
      - chronicle.nativeDashboards.delete
      - chronicle.nativeDashboards.duplicate
      - chronicle.nativeDashboards.get
      - chronicle.nativeDashboards.list
      - chronicle.nativeDashboards.update
      - chronicle.operations.cancel
      - chronicle.operations.delete
      - chronicle.operations.get
      - chronicle.operations.list
      - chronicle.operations.streamSearch
      - chronicle.operations.wait
      - chronicle.preferenceSets.get
      - chronicle.preferenceSets.update
      - chronicle.referenceLists.create
      - chronicle.referenceLists.get
      - chronicle.referenceLists.list
      - chronicle.referenceLists.update
      - chronicle.referenceLists.verifyReferenceList
      - chronicle.retrohunts.create
      - chronicle.retrohunts.get
      - chronicle.retrohunts.list
      - chronicle.riskConfigs.get
      - chronicle.riskConfigs.update
      - chronicle.ruleDeployments.get
      - chronicle.ruleDeployments.list
      - chronicle.ruleDeployments.update
      - chronicle.ruleExecutionErrors.list
      - chronicle.rules.create
      - chronicle.rules.delete
      - chronicle.rules.get
      - chronicle.rules.list
      - chronicle.rules.listRevisions
      - chronicle.rules.update
      - chronicle.rules.verifyRuleText
      - chronicle.searchQueries.get
      - chronicle.searchQueries.list
      - chronicle.searchQueries.update
      - chronicle.threatCollections.fetchIocMatchMetadata
      - chronicle.threatCollections.fetchRuleMetadata
      - chronicle.threatCollections.get
      - chronicle.threatCollections.list
      - chronicle.watchlists.create
      - chronicle.watchlists.delete
      - chronicle.watchlists.get
      - chronicle.watchlists.list
      - chronicle.watchlists.update
      - resourcemanager.projects.get
    project: test-project
    role_id: SecOpsScopedDetectionEngineer
    stage: GA
    title: Custom role SecOpsScopedDetectionEngineer
  module.project.google_project_iam_custom_role.roles["SecOpsScopedOnboardingEngineer"]:
    description: Terraform-managed.
    permissions:
      - chronicle.ais.createFeedback
      - chronicle.ais.translateUdmQuery
      - chronicle.ais.translateYlRule
      - chronicle.collectors.create
      - chronicle.collectors.delete
      - chronicle.collectors.get
      - chronicle.collectors.list
      - chronicle.collectors.update
      - chronicle.conversations.get
      - chronicle.conversations.list
      - chronicle.conversations.update
      - chronicle.dashboardCharts.get
      - chronicle.dashboardCharts.list
      - chronicle.dashboardQueries.execute
      - chronicle.dashboardQueries.get
      - chronicle.dashboardQueries.list
      - chronicle.dashboards.copy
      - chronicle.dashboards.create
      - chronicle.dashboards.delete
      - chronicle.dashboards.edit
      - chronicle.dashboards.get
      - chronicle.dashboards.list
      - chronicle.dashboards.schedule
      - chronicle.dataAccessLabels.get
      - chronicle.dataAccessLabels.list
      - chronicle.dataAccessLabels.update
      - chronicle.dataAccessScopes.get
      - chronicle.dataAccessScopes.list
      - chronicle.dataAccessScopes.permit
      - chronicle.dataAccessScopes.update
      - chronicle.enrichmentControls.get
      - chronicle.enrichmentControls.list
      - chronicle.entities.batchCreate
      - chronicle.entities.batchDelete
      - chronicle.entities.batchValidate
      - chronicle.entities.find
      - chronicle.entities.findRelatedEntities
      - chronicle.entities.get
      - chronicle.entities.import
      - chronicle.entities.list
      - chronicle.entities.modifyEntityRiskScore
      - chronicle.entities.queryEntityRiskScoreModifications
      - chronicle.entities.searchEntities
      - chronicle.entities.summarize
      - chronicle.entities.summarizeFromQuery
      - chronicle.events.batchGet
      - chronicle.events.findUdmFieldValues
      - chronicle.events.get
      - chronicle.events.import
      - chronicle.events.queryProductSourceStats
      - chronicle.events.searchRawLogs
      - chronicle.events.udmSearch
      - chronicle.events.validateQuery
      - chronicle.extensionValidationReports.get
      - chronicle.extensionValidationReports.list
      - chronicle.feedPacks.get
      - chronicle.feedPacks.list
      - chronicle.feedServiceAccounts.fetch
      - chronicle.feedSourceTypeSchemas.list
      - chronicle.feeds.create
      - chronicle.feeds.delete
      - chronicle.feeds.disable
      - chronicle.feeds.enable
      - chronicle.feeds.generateSecret
      - chronicle.feeds.get
      - chronicle.feeds.list
      - chronicle.feeds.update
      - chronicle.findingsGraphs.exploreNode
      - chronicle.findingsGraphs.initializeGraph
      - chronicle.forwarders.create
      - chronicle.forwarders.delete
      - chronicle.forwarders.generate
      - chronicle.forwarders.get
      - chronicle.forwarders.list
      - chronicle.forwarders.update
      - chronicle.ingestionLogLabels.get
      - chronicle.ingestionLogLabels.list
      - chronicle.ingestionLogNamespaces.get
      - chronicle.ingestionLogNamespaces.list
      - chronicle.instances.generateCollectionAgentAuth
      - chronicle.instances.generateSoarAuthJwt
      - chronicle.instances.generateWorkspaceConnectionToken
      - chronicle.instances.get
      - chronicle.instances.graduatePocInstance
      - chronicle.instances.logTypeClassifier
      - chronicle.instances.report
      - chronicle.instances.update
      - chronicle.instances.verifyNonce
      - chronicle.legacies.legacyFetchUdmSearchCsv
      - chronicle.legacies.legacyFetchUdmSearchView
      - chronicle.legacies.legacyFindAssetEvents
      - chronicle.legacies.legacyFindRawLogs
      - chronicle.legacies.legacyFindUdmEvents
      - chronicle.legacies.legacySearchArtifactEvents
      - chronicle.legacies.legacySearchArtifactIoCDetails
      - chronicle.legacies.legacySearchAssetEvents
      - chronicle.legacies.legacySearchCustomerStats
      - chronicle.legacies.legacySearchEnterpriseWideIoCs
      - chronicle.legacies.legacySearchIngestionStats
      - chronicle.legacies.legacySearchIoCInsights
      - chronicle.legacies.legacySearchRawLogs
      - chronicle.legacies.legacySearchUserEvents
      - chronicle.logTypeSchemas.list
      - chronicle.logTypeSettings.get
      - chronicle.logTypeSettings.list
      - chronicle.logTypeSettings.update
      - chronicle.logTypes.create
      - chronicle.logTypes.get
      - chronicle.logTypes.list
      - chronicle.logTypes.update
      - chronicle.logs.get
      - chronicle.logs.list
      - chronicle.messages.get
      - chronicle.messages.list
      - chronicle.messages.update
      - chronicle.nativeDashboards.create
      - chronicle.nativeDashboards.delete
      - chronicle.nativeDashboards.duplicate
      - chronicle.nativeDashboards.get
      - chronicle.nativeDashboards.list
      - chronicle.nativeDashboards.update
      - chronicle.operations.cancel
      - chronicle.operations.delete
      - chronicle.operations.get
      - chronicle.operations.list
      - chronicle.operations.streamSearch
      - chronicle.operations.wait
      - chronicle.parserExtensions.activate
      - chronicle.parserExtensions.create
      - chronicle.parserExtensions.delete
      - chronicle.parserExtensions.generateKeyValueMappings
      - chronicle.parserExtensions.get
      - chronicle.parserExtensions.legacySubmitParserExtension
      - chronicle.parserExtensions.list
      - chronicle.parserExtensions.removeSyslog
      - chronicle.parsers.activate
      - chronicle.parsers.activateReleaseCandidate
      - chronicle.parsers.copyPrebuiltParser
      - chronicle.parsers.create
      - chronicle.parsers.deactivate
      - chronicle.parsers.delete
      - chronicle.parsers.generateEventTypesSuggestions
      - chronicle.parsers.get
      - chronicle.parsers.list
      - chronicle.parsers.runParser
      - chronicle.parsingErrors.list
      - chronicle.preferenceSets.get
      - chronicle.preferenceSets.update
      - chronicle.riskConfigs.get
      - chronicle.riskConfigs.update
      - chronicle.searchQueries.get
      - chronicle.searchQueries.list
      - chronicle.searchQueries.update
      - chronicle.validationErrors.list
      - chronicle.validationReports.get
      - chronicle.watchlists.get
      - chronicle.watchlists.list
      - chronicle.watchlists.update
      - resourcemanager.projects.get
    project: test-project
    role_id: SecOpsScopedOnboardingEngineer
    stage: GA
    title: Custom role SecOpsScopedOnboardingEngineer
  module.project.google_project_iam_custom_role.roles["SecOpsScopedSOCAnalyst"]:
    description: Terraform-managed.
    permissions:
      - chronicle.ais.createFeedback
      - chronicle.ais.translateUdmQuery
      - chronicle.ais.translateYlRule
      - chronicle.conversations.get
      - chronicle.conversations.list
      - chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections
      - chronicle.curatedRuleSetCategories.get
      - chronicle.curatedRuleSetCategories.list
      - chronicle.curatedRuleSetDeployments.batchUpdate
      - chronicle.curatedRuleSetDeployments.get
      - chronicle.curatedRuleSetDeployments.list
      - chronicle.curatedRuleSets.countCuratedRuleSetDetections
      - chronicle.curatedRuleSets.get
      - chronicle.curatedRuleSets.list
      - chronicle.curatedRules.get
      - chronicle.curatedRules.list
      - chronicle.dashboardCharts.get
      - chronicle.dashboardCharts.list
      - chronicle.dashboardQueries.execute
      - chronicle.dashboardQueries.get
      - chronicle.dashboardQueries.list
      - chronicle.dashboards.copy
      - chronicle.dashboards.edit
      - chronicle.dashboards.get
      - chronicle.dashboards.list
      - chronicle.dashboards.schedule
      - chronicle.dataAccessLabels.get
      - chronicle.dataAccessLabels.list
      - chronicle.dataAccessScopes.get
      - chronicle.dataAccessScopes.list
      - chronicle.dataAccessScopes.permit
      - chronicle.dataTableOperationErrors.get
      - chronicle.dataTableRows.asyncBulkCreate
      - chronicle.dataTableRows.asyncBulkReplace
      - chronicle.dataTableRows.asyncBulkUpdate
      - chronicle.dataTableRows.bulkCreate
      - chronicle.dataTableRows.bulkReplace
      - chronicle.dataTableRows.bulkUpdate
      - chronicle.dataTableRows.get
      - chronicle.dataTableRows.list
      - chronicle.dataTables.bulkCreateDataTableAsync
      - chronicle.dataTables.get
      - chronicle.dataTables.list
      - chronicle.enrichmentControls.get
      - chronicle.enrichmentControls.list
      - chronicle.entities.batchCreate
      - chronicle.entities.batchDelete
      - chronicle.entities.batchValidate
      - chronicle.entities.find
      - chronicle.entities.findRelatedEntities
      - chronicle.entities.get
      - chronicle.entities.import
      - chronicle.entities.list
      - chronicle.entities.modifyEntityRiskScore
      - chronicle.entities.queryEntityRiskScoreModifications
      - chronicle.entities.searchEntities
      - chronicle.entities.summarize
      - chronicle.entities.summarizeFromQuery
      - chronicle.events.batchGet
      - chronicle.events.findUdmFieldValues
      - chronicle.events.get
      - chronicle.events.import
      - chronicle.events.queryProductSourceStats
      - chronicle.events.searchRawLogs
      - chronicle.events.udmSearch
      - chronicle.events.validateQuery
      - chronicle.featuredContentRules.list
      - chronicle.findingsGraphs.exploreNode
      - chronicle.findingsGraphs.initializeGraph
      - chronicle.findingsRefinementDeployments.get
      - chronicle.findingsRefinementDeployments.list
      - chronicle.findingsRefinements.computeActivity
      - chronicle.findingsRefinements.computeAllActivities
      - chronicle.findingsRefinements.get
      - chronicle.findingsRefinements.list
      - chronicle.findingsRefinements.test
      - chronicle.instances.generateCollectionAgentAuth
      - chronicle.instances.generateSoarAuthJwt
      - chronicle.instances.generateWorkspaceConnectionToken
      - chronicle.instances.get
      - chronicle.instances.graduatePocInstance
      - chronicle.instances.logTypeClassifier
      - chronicle.instances.report
      - chronicle.instances.verifyNonce
      - chronicle.iocMatches.get
      - chronicle.iocMatches.list
      - chronicle.iocState.get
      - chronicle.iocs.batchGet
      - chronicle.iocs.findFirstAndLastSeen
      - chronicle.iocs.get
      - chronicle.iocs.searchCuratedDetectionsForIoc
      - chronicle.legacies.legacyBatchGetCollections
      - chronicle.legacies.legacyFetchAlertsView
      - chronicle.legacies.legacyFetchUdmSearchCsv
      - chronicle.legacies.legacyFetchUdmSearchView
      - chronicle.legacies.legacyFindAssetEvents
      - chronicle.legacies.legacyFindRawLogs
      - chronicle.legacies.legacyFindUdmEvents
      - chronicle.legacies.legacyGetAlert
      - chronicle.legacies.legacyGetCuratedRulesTrends
      - chronicle.legacies.legacyGetDetection
      - chronicle.legacies.legacyGetEventForDetection
      - chronicle.legacies.legacyGetRuleCounts
      - chronicle.legacies.legacyGetRulesTrends
      - chronicle.legacies.legacyRunTestRule
      - chronicle.legacies.legacySearchArtifactEvents
      - chronicle.legacies.legacySearchArtifactIoCDetails
      - chronicle.legacies.legacySearchAssetEvents
      - chronicle.legacies.legacySearchCuratedDetections
      - chronicle.legacies.legacySearchCustomerStats
      - chronicle.legacies.legacySearchDetections
      - chronicle.legacies.legacySearchDomainsRecentlyRegistered
      - chronicle.legacies.legacySearchDomainsTimingStats
      - chronicle.legacies.legacySearchEnterpriseWideAlerts
      - chronicle.legacies.legacySearchEnterpriseWideIoCs
      - chronicle.legacies.legacySearchFindings
      - chronicle.legacies.legacySearchIngestionStats
      - chronicle.legacies.legacySearchIoCInsights
      - chronicle.legacies.legacySearchRawLogs
      - chronicle.legacies.legacySearchRuleDetectionCountBuckets
      - chronicle.legacies.legacySearchRuleDetectionEvents
      - chronicle.legacies.legacySearchRuleResults
      - chronicle.legacies.legacySearchRulesAlerts
      - chronicle.legacies.legacySearchUserEvents
      - chronicle.legacies.legacyStreamDetectionAlerts
      - chronicle.legacies.legacyTestRuleStreaming
      - chronicle.messages.get
      - chronicle.messages.list
      - chronicle.nativeDashboards.duplicate
      - chronicle.nativeDashboards.get
      - chronicle.nativeDashboards.list
      - chronicle.operations.cancel
      - chronicle.operations.get
      - chronicle.operations.list
      - chronicle.operations.streamSearch
      - chronicle.operations.wait
      - chronicle.preferenceSets.get
      - chronicle.referenceLists.get
      - chronicle.referenceLists.list
      - chronicle.referenceLists.verifyReferenceList
      - chronicle.retrohunts.get
      - chronicle.retrohunts.list
      - chronicle.riskConfigs.get
      - chronicle.ruleDeployments.get
      - chronicle.ruleDeployments.list
      - chronicle.ruleExecutionErrors.list
      - chronicle.rules.get
      - chronicle.rules.list
      - chronicle.rules.listRevisions
      - chronicle.rules.verifyRuleText
      - chronicle.searchQueries.get
      - chronicle.searchQueries.list
      - chronicle.threatCollections.fetchIocMatchMetadata
      - chronicle.threatCollections.fetchRuleMetadata
      - chronicle.threatCollections.get
      - chronicle.threatCollections.list
      - chronicle.watchlists.get
      - chronicle.watchlists.list
      - resourcemanager.projects.get
    project: test-project
    role_id: SecOpsScopedSOCAnalyst
    stage: GA
    title: Custom role SecOpsScopedSOCAnalyst
  module.project.google_project_iam_member.bindings["iam-bpa:user:bruzzechesse@google.com-roles/chronicle.editor"]:
    condition: []
    member: user:bruzzechesse@google.com
    project: test-project
    role: roles/chronicle.editor
  module.project.google_project_iam_member.bindings["user:bruzzechesse@google.com"]:
    condition:
      - description: datarbac
        expression: resource.name.endsWith('/gscope')
        title: datarbac
    member: user:bruzzechesse@google.com
    project: test-project
    role: roles/chronicle.restrictedDataAccess
  module.project.google_project_iam_member.service_agents["compute-system"]:
    condition: []
    project: test-project
    role: roles/compute.serviceAgent
  module.project.google_project_iam_member.service_agents["gcf-admin-robot"]:
    condition: []
    project: test-project
    role: roles/cloudfunctions.serviceAgent
  module.project.google_project_iam_member.service_agents["pubsub"]:
    condition: []
    project: test-project
    role: roles/pubsub.serviceAgent
  module.project.google_project_service.project_services["admin.googleapis.com"]:
    disable_dependent_services: false
    disable_on_destroy: false
    project: test-project
    service: admin.googleapis.com
    timeouts: null
  module.project.google_project_service.project_services["alertcenter.googleapis.com"]:
    disable_dependent_services: false
    disable_on_destroy: false
    project: test-project
    service: alertcenter.googleapis.com
    timeouts: null
  module.project.google_project_service.project_services["apikeys.googleapis.com"]:
    disable_dependent_services: false
    disable_on_destroy: false
    project: test-project
    service: apikeys.googleapis.com
    timeouts: null
  module.project.google_project_service.project_services["cloudfunctions.googleapis.com"]:
    disable_dependent_services: false
    disable_on_destroy: false
    project: test-project
    service: cloudfunctions.googleapis.com
    timeouts: null
  module.project.google_project_service.project_services["compute.googleapis.com"]:
    disable_dependent_services: false
    disable_on_destroy: false
    project: test-project
    service: compute.googleapis.com
    timeouts: null
  module.project.google_project_service.project_services["iap.googleapis.com"]:
    disable_dependent_services: false
    disable_on_destroy: false
    project: test-project
    service: iap.googleapis.com
    timeouts: null
  module.project.google_project_service.project_services["pubsub.googleapis.com"]:
    disable_dependent_services: false
    disable_on_destroy: false
    project: test-project
    service: pubsub.googleapis.com
    timeouts: null
  module.project.google_project_service.project_services["secretmanager.googleapis.com"]:
    disable_dependent_services: false
    disable_on_destroy: false
    project: test-project
    service: secretmanager.googleapis.com
    timeouts: null
  module.project.google_project_service.project_services["stackdriver.googleapis.com"]:
    disable_dependent_services: false
    disable_on_destroy: false
    project: test-project
    service: stackdriver.googleapis.com
    timeouts: null
  module.project.google_project_service_identity.default["apikeys.googleapis.com"]:
    project: test-project
    service: apikeys.googleapis.com
    timeouts: null
  module.project.google_project_service_identity.default["cloudfunctions.googleapis.com"]:
    project: test-project
    service: cloudfunctions.googleapis.com
    timeouts: null
  module.project.google_project_service_identity.default["iap.googleapis.com"]:
    project: test-project
    service: iap.googleapis.com
    timeouts: null
  module.project.google_project_service_identity.default["pubsub.googleapis.com"]:
    project: test-project
    service: pubsub.googleapis.com
    timeouts: null
  module.project.google_project_service_identity.default["secretmanager.googleapis.com"]:
    project: test-project
    service: secretmanager.googleapis.com
    timeouts: null
  module.secops-data-rbac.google_chronicle_data_access_label.labels["google"]:
    data_access_label_id: google
    description: Google logs
    instance: xxxxxxx-xxxxx-xxxxxx-xxxxxxx
    location: europe
    project: test-project
    timeouts: null
    udm_query: principal.hostname="google.com"
  module.secops-data-rbac.google_chronicle_data_access_scope.scopes["google"]:
    allow_all: false
    allowed_data_access_labels:
      - asset_namespace: null
        data_access_label: google
        ingestion_label: []
        log_type: null
    data_access_scope_id: gscope
    denied_data_access_labels: []
    description: Google logs
    instance: xxxxxxx-xxxxx-xxxxxx-xxxxxxx
    location: europe
    project: test-project
    timeouts: null
  module.secops-rules.google_chronicle_reference_list.default["test_2"]:
    description: Private CIDR ranges
    entries:
      - value: 10.0.0.0/8
      - value: 172.16.0.0/12
      - value: 192.168.0.0/16
      - value: 127.0.0.1/32
      - value: ::1/128
      - value: fc00::/7
      - value: fe80::/10
    instance: xxxxxxx-xxxxx-xxxxxx-xxxxxxx
    location: europe
    project: test-project
    reference_list_id: test_2
    syntax_type: REFERENCE_LIST_SYNTAX_TYPE_CIDR
    timeouts: null
  module.secops-rules.google_chronicle_rule.default["network_traffic_to_specific_country"]:
    deletion_policy: FORCE
    instance: xxxxxxx-xxxxx-xxxxxx-xxxxxxx
    location: europe
    project: test-project
    scope: null
    text: "rule network_traffic_to_specific_country {\n\n  meta:\n    author = \"\
      Google Cloud Security\"\n    description = \"Identify network traffic based\
      \ on target country\"\n    type = \"alert\"\n    tags = \"geoip enrichment\"\
      \n    data_source = \"microsoft windows events\"\n    severity = \"Low\"\n \
      \   priority = \"Low\"\n\n  events:\n    $network.metadata.event_type = \"NETWORK_CONNECTION\"\
      \n    //Specify a country of interest to monitor or add additional countries\
      \ using an or statement\n    $network.target.ip_geo_artifact.location.country_or_region\
      \ = \"France\" nocase\n    $network.target.ip = $ip\n\n  match:\n    $ip over\
      \ 30m\n\n  outcome:\n    $risk_score = max(35)\n    $event_count = count_distinct($network.metadata.id)\n\
      \n    // added to populate alert graph with additional context\n    $principal_ip\
      \ = array_distinct($network.principal.ip)\n\n    // Commented out target.ip\
      \ because it is already represented in graph as match variable. If match changes,\
      \ can uncomment to add to results\n    //$target_ip = array_distinct($network.target.ip)\n\
      \    $principal_process_pid = array_distinct($network.principal.process.pid)\n\
      \    $principal_process_command_line = array_distinct($network.principal.process.command_line)\n\
      \    $principal_process_file_sha256 = array_distinct($network.principal.process.file.sha256)\n\
      \    $principal_process_file_full_path = array_distinct($network.principal.process.file.full_path)\n\
      \    $principal_process_product_specfic_process_id = array_distinct($network.principal.process.product_specific_process_id)\n\
      \    $principal_process_parent_process_product_specfic_process_id = array_distinct($network.principal.process.parent_process.product_specific_process_id)\n\
      \    $target_process_pid = array_distinct($network.target.process.pid)\n   \
      \ $target_process_command_line = array_distinct($network.target.process.command_line)\n\
      \    $target_process_file_sha256 = array_distinct($network.target.process.file.sha256)\n\
      \    $target_process_file_full_path = array_distinct($network.target.process.file.full_path)\n\
      \    $target_process_product_specfic_process_id = array_distinct($network.target.process.product_specific_process_id)\n\
      \    $target_process_parent_process_product_specfic_process_id = array_distinct($network.target.process.parent_process.product_specific_process_id)\n\
      \    $principal_user_userid = array_distinct($network.principal.user.userid)\n\
      \    $target_user_userid = array_distinct($network.target.user.userid)\n\n \
      \ condition:\n    $network\n}\n"
    timeouts: null
  module.secops-rules.google_chronicle_rule_deployment.default["network_traffic_to_specific_country"]:
    alerting: true
    archived: false
    enabled: true
    instance: xxxxxxx-xxxxx-xxxxxx-xxxxxxx
    location: europe
    project: test-project
    run_frequency: LIVE
    timeouts: null
  module.secops-tenant-secrets.google_secret_manager_secret.default["secops-feeds-api-key"]:
    annotations: null
    deletion_protection: false
    effective_labels:
      goog-terraform-provisioned: 'true'
    labels: null
    project: test-project
    replication:
      - auto: []
        user_managed:
          - replicas:
              - customer_managed_encryption: []
                location: europe-west8
    rotation: []
    secret_id: secops-feeds-api-key
    terraform_labels:
      goog-terraform-provisioned: 'true'
    timeouts: null
    topics: []
    ttl: null
    version_aliases: null
    version_destroy_ttl: null
  module.secops-tenant-secrets.google_secret_manager_secret.default["secops-workspace-ing-sa-key"]:
    annotations: null
    deletion_protection: false
    effective_labels:
      goog-terraform-provisioned: 'true'
    labels: null
    project: test-project
    replication:
      - auto: []
        user_managed:
          - replicas:
              - customer_managed_encryption: []
                location: europe-west8
    rotation: []
    secret_id: secops-workspace-ing-sa-key
    terraform_labels:
      goog-terraform-provisioned: 'true'
    timeouts: null
    topics: []
    ttl: null
    version_aliases: null
    version_destroy_ttl: null
  module.secops-tenant-secrets.google_secret_manager_secret_version.default["secops-feeds-api-key:latest"]:
    deletion_policy: DELETE
    enabled: true
    is_secret_data_base64: false
    secret_data_wo: null
    secret_data_wo_version: 0
    timeouts: null
  module.secops-tenant-secrets.google_secret_manager_secret_version.default["secops-workspace-ing-sa-key:latest"]:
    deletion_policy: DELETE
    enabled: true
    is_secret_data_base64: false
    secret_data_wo: null
    secret_data_wo_version: 0
    timeouts: null
  module.workspace-integration-sa[0].google_service_account.service_account[0]:
    account_id: workspace-integration
    create_ignore_already_exists: null
    description: null
    disabled: false
    display_name: Terraform-managed.
    email: workspace-integration@test-project.iam.gserviceaccount.com
    member: serviceAccount:workspace-integration@test-project.iam.gserviceaccount.com
    project: test-project
    timeouts: null
  restful_operation.webhook_feeds_secret["okta"]:
    body: null
    delete_body: null
    delete_header: null
    delete_method: null
    delete_path: null
    delete_query: null
    ephemeral_body: null
    header: null
    id_builder: null
    method: POST
    operation_header: null
    operation_query: null
    output_attrs: null
    poll: null
    poll_delete: null
    precheck: null
    precheck_delete: null
    query: null
  restful_resource.azure_ad_feeds["azure-ad"]:
    body:
      details:
        azure_ad_settings:
          auth_endpoint: login.microsoftonline.com
          authentication:
            client_id: xxxxxxx-xxxxx-xxxxx-xxxxxxx
            client_secret: xxxxxxxxxxxxxxxxxxxxxxxxx
          hostname: graph.microsoft.com/v1.0/auditLogs/signIns
          tenant_id: xxxxxx-xxxxx-xxxxx-xxxxxxx
        feed_source_type: API
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/AZURE_AD
      display_name: azure-ad
      name: azure-ad
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="azure-ad")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.azure_ad_feeds["azure-ad-audit"]:
    body:
      details:
        azure_ad_audit_settings:
          auth_endpoint: login.microsoftonline.com
          authentication:
            client_id: xxxxxxx-xxxxx-xxxxx-xxxxxxx
            client_secret: xxxxxxxxxxxxxxxxxxxxxxxxx
          hostname: graph.microsoft.com/v1.0/auditLogs/directoryAudits
          tenant_id: xxxxxx-xxxxx-xxxxx-xxxxxxx
        feed_source_type: API
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/AZURE_AD_AUDIT
      display_name: azure-ad-audit
      name: azure-ad-audit
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="azure-ad-audit")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.azure_ad_feeds["azure-ad-context"]:
    body:
      details:
        azure_ad_context_settings:
          auth_endpoint: login.microsoftonline.com
          authentication:
            client_id: xxxxxxx-xxxxx-xxxxx-xxxxxxx
            client_secret: xxxxxxxxxxxxxxxxxxxxxxxxx
          hostname: graph.microsoft.com/beta
          retrieve_devices: true
          retrieve_groups: true
          tenant_id: xxxxxx-xxxxx-xxxxx-xxxxxxx
        feed_source_type: API
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/AZURE_AD_CONTEXT
      display_name: azure-ad-context
      name: azure-ad-context
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="azure-ad-context")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.okta_ad_feeds["okta"]:
    body:
      details:
        feed_source_type: API
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/OKTA
        okta_settings:
          authentication:
            header_key_values:
              - key: Authorization
                value: XXXXXXXXXXXXX
          hostname: xxxxx.okta.com
      display_name: okta
      name: okta
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="okta")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.okta_ad_feeds["okta-user-context"]:
    body:
      details:
        feed_source_type: API
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/OKTA_USER_CONTEXT
        okta_user_context_settings:
          authentication:
            header_key_values:
              - key: Authorization
                value: XXXXXXXXXXXXX
          hostname: xxxxx.okta.com
          manager_id_reference_field: managerId
      display_name: okta-user-context
      name: okta-user-context
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="okta-user-context")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.webhook_feeds["okta"]:
    body:
      details:
        feed_source_type: HTTPS_PUSH_WEBHOOK
        httpsPushWebhookSettings: {}
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/okta
      display_name: webhook-okta
      name: okta
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="okta")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.workspace_feeds["ws-activity"]:
    body:
      details:
        asset_namespace: ''
        feed_source_type: API
        labels: {}
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/WORKSPACE_ACTIVITY
        workspace_activity_settings:
          applications:
            - access_transparency
            - admin
            - calendar
            - chat
            - drive
            - gcp
            - gplus
            - groups
            - groups_enterprise
            - jamboard
            - login
            - meet
            - mobile
            - rules
            - saml
            - token
            - user_accounts
            - context_aware_access
            - chrome
            - data_studio
            - keep
          authentication:
            claims:
              audience: https://oauth2.googleapis.com/token
              issuer: workspace-integration@test-project.iam.gserviceaccount.com
              subject: secops-feed@example.com
            rs_credentials: {}
            token_endpoint: https://oauth2.googleapis.com/token
          workspace_customer_id: CXXXXXXXX
      display_name: ws-activity
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="ws-activity")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.workspace_feeds["ws-alerts"]:
    body:
      details:
        asset_namespace: ''
        feed_source_type: API
        labels: {}
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/WORKSPACE_ALERTS
        workspace_alerts_settings:
          authentication:
            claims:
              audience: https://oauth2.googleapis.com/token
              issuer: workspace-integration@test-project.iam.gserviceaccount.com
              subject: secops-feed@example.com
            rs_credentials: {}
            token_endpoint: https://oauth2.googleapis.com/token
          workspace_customer_id: XXXXXXXX
      display_name: ws-alerts
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="ws-alerts")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.workspace_feeds["ws-chrome"]:
    body:
      details:
        asset_namespace: ''
        feed_source_type: API
        labels: {}
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/WORKSPACE_CHROMEOS
        workspace_chrome_os_settings:
          authentication:
            claims:
              audience: https://oauth2.googleapis.com/token
              issuer: workspace-integration@test-project.iam.gserviceaccount.com
              subject: secops-feed@example.com
            rs_credentials: {}
            token_endpoint: https://oauth2.googleapis.com/token
          workspace_customer_id: CXXXXXXXX
      display_name: ws-chrome
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="ws-chrome")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.workspace_feeds["ws-group"]:
    body:
      details:
        asset_namespace: ''
        feed_source_type: API
        labels: {}
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/WORKSPACE_GROUPS
        workspace_groups_settings:
          authentication:
            claims:
              audience: https://oauth2.googleapis.com/token
              issuer: workspace-integration@test-project.iam.gserviceaccount.com
              subject: secops-feed@example.com
            rs_credentials: {}
            token_endpoint: https://oauth2.googleapis.com/token
          workspace_customer_id: CXXXXXXXX
      display_name: ws-group
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="ws-group")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.workspace_feeds["ws-mobile"]:
    body:
      details:
        asset_namespace: ''
        feed_source_type: API
        labels: {}
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/WORKSPACE_MOBILE
        workspace_mobile_settings:
          authentication:
            claims:
              audience: https://oauth2.googleapis.com/token
              issuer: workspace-integration@test-project.iam.gserviceaccount.com
              subject: secops-feed@example.com
            rs_credentials: {}
            token_endpoint: https://oauth2.googleapis.com/token
          workspace_customer_id: CXXXXXXXX
      display_name: ws-mobile
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="ws-mobile")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details
  restful_resource.workspace_feeds["ws-users"]:
    body:
      details:
        asset_namespace: ''
        feed_source_type: API
        labels: {}
        log_type: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/logTypes/WORKSPACE_USERS
        workspace_users_settings:
          authentication:
            claims:
              audience: https://oauth2.googleapis.com/token
              issuer: workspace-integration@test-project.iam.gserviceaccount.com
              subject: secops-feed@example.com
            rs_credentials: {}
            token_endpoint: https://oauth2.googleapis.com/token
          workspace_customer_id: CXXXXXXXX
      display_name: ws-users
    check_existance: false
    create_header: null
    create_method: POST
    create_query: null
    create_selector: null
    delete_body: null
    delete_body_raw: null
    delete_header: null
    delete_method: DELETE
    delete_path: $query_unescape(body.name)
    delete_query: null
    ephemeral_body: null
    force_new_attrs: null
    header: null
    merge_patch_disabled: null
    output_attrs: null
    path: projects/test-project/locations/europe/instances/xxxxxxx-xxxxx-xxxxxx-xxxxxxx/feeds
    poll_create: null
    poll_delete: null
    poll_update: null
    precheck_create: null
    precheck_delete: null
    precheck_update: null
    query: null
    read_header: null
    read_path: null
    read_query: null
    read_response_template: null
    read_selector: feeds.#(displayName=="ws-users")
    update_body_patches: null
    update_header: null
    update_method: null
    update_path: null
    update_query: null
    write_only_attrs:
      - details

counts:
  google_apikeys_key: 1
  google_chronicle_data_access_label: 1
  google_chronicle_data_access_scope: 1
  google_chronicle_reference_list: 1
  google_chronicle_rule: 1
  google_chronicle_rule_deployment: 1
  google_monitoring_alert_policy: 3
  google_monitoring_notification_channel: 1
  google_org_policy_policy: 1
  google_project: 1
  google_project_iam_binding: 1
  google_project_iam_custom_role: 7
  google_project_iam_member: 5
  google_project_service: 9
  google_project_service_identity: 5
  google_secret_manager_secret: 2
  google_secret_manager_secret_version: 2
  google_service_account: 1
  google_service_account_key: 1
  modules: 5
  resources: 58
  restful_operation: 1
  restful_resource: 12

outputs:
  project_id: test-project
